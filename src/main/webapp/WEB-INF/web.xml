<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
 
 
	<display-name>Google Cloud Print</display-name>
	<description>Older Servlet containers donâ€™t have support for the
		ServletContextInitializer bootstrap process used in Servlet 3.0. You
		can still use Spring and Spring Boot in these containers but you are
		going to need to add a web.xml to your application and configure it to
		load an ApplicationContext via a DispatcherServlet</description>
		
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<context-param>
		<param-name>contextClass</param-name>
		<param-value>org.springframework.web.context.support.AnnotationConfigWebApplicationContext</param-value>
	</context-param>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>com.fluidnotions.WebConfig</param-value>
	</context-param>

 
	<servlet>
		<servlet-name>gcp</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value></param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>gcp</servlet-name>
		<url-pattern>/gcp/*</url-pattern>
	</servlet-mapping>
	
</web-app>